apiVersion: v1
data:
  TOPOLOGY_PASSWORD: b3JjaGVzdHJhdG9yX3Bhc3N3b3Jk
  TOPOLOGY_USER: b3JjaGVzdHJhdG9y
kind: Secret
metadata:
  labels:
    app: orchestratorr
  name: orchestrator
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-0-svc
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 3000
  - name: raft
    port: 10008
    protocol: TCP
    targetPort: 10008
  selector:
    statefulset.kubernetes.io/pod-name: orchestrator-0
  publishNotReadyAddresses: true
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-1-svc
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 3000
  - name: raft
    port: 10008
    protocol: TCP
    targetPort: 10008
  selector:
    statefulset.kubernetes.io/pod-name: orchestrator-1
  publishNotReadyAddresses: true
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-2-svc
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 3000
  - name: raft
    port: 10008
    protocol: TCP
    targetPort: 10008
  selector:
    statefulset.kubernetes.io/pod-name: orchestrator-2
  publishNotReadyAddresses: true
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: orchestrator
  name: orchestrator
spec:
  podManagementPolicy: "Parallel"
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: orchestrator
  serviceName: orchestrator
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: orchestrator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: orchestrator
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: ORC_TOPOLOGY_USER
          valueFrom:
            secretKeyRef:
              key: TOPOLOGY_USER
              name: orchestrator
        - name: ORC_TOPOLOGY_PASSWORD
          valueFrom:
            secretKeyRef:
              key: TOPOLOGY_PASSWORD
              name: orchestrator
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        envFrom:
        - prefix: ORC_
          secretRef:
            name: orchestrator
        image: perconalab/percona-server-mysql-operator:main-orchestrator
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/lb-check
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 200
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: orchestrator
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        - containerPort: 10008
          name: raft
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/raft-health
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/orchestrator/
          name: data
        - mountPath: /etc/orchestrator/orchestrator-users-secret
          name: orchestrator-users-secret-file
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 777
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: orchestrator-users-secret-file
        secret:
          defaultMode: 420
          optional: false
          secretName: orchestrator
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem
