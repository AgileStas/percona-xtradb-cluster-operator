#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")
#@ load("@ytt:yaml", "yaml")


#@ def image():
spec:
  upgradeOptions:
    apply: disabled
  pxc:
    image: #@ data.values.image.pxc80.db
  proxysql:
    image: #@ data.values.image.proxysql
  backup:
    image: #@ data.values.image.pxc80.backup
  haproxy:
    image: #@ data.values.image.haproxy
  pmm:
    image: #@ data.values.image.pmmclient
  logcollector:
    image: #@ data.values.image.logcollector
#@ end

#@ def set_storage(storage):
spec:
  storageName: #@ storage
#@ end

#@ def get_cr():
_: #@ template.replace(yaml.decode(data.values.manifest.cr))
#@ end

#@ def get_backup():
_: #@ template.replace(yaml.decode(data.values.manifest.backup))
#@ end

#@ def get_restore():
_: #@ template.replace(yaml.decode(data.values.manifest.restore))
#@ end

#@ def rendered_cr():
#@ return overlay.apply(get_cr(), image())
#@ end

#@ def get_all_crs():
#@ crs = []
#@ for storage in rendered_cr()["spec"]["backup"]["storages"]:
#@ crs.append(overlay.apply(get_backup(), set_storage(storage)))
#@ end
#@ crs.append(rendered_cr())
#@ crs.append(get_restore())
#@ return crs
#@ end